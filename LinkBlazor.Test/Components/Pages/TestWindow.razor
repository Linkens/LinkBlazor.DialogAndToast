@inject DialogService Dialog

<h3>TestWindow @Value @Value2</h3>

<button @onclick="RecursiveChaos">New window</button>
<button @onclick="TestStateHasChanged">StateHasChanged</button>
<button @onclick="()=>Dialog.Close(true)"></button>

@code {
    [Parameter] public int Value { get; set; }
    public int Value2 { get; set; }
    protected async Task RecursiveChaos()
    {
        await Dialog.OpenAsync<TestWindow>(new() { { "Value", Value + 1 } });
    }
    protected async Task TestStateHasChanged()
    {
        for (int i = 0; i < 10; i++)
        {
            StateHasChanged();
            Value2++;
            await Task.Delay(1000);
        }
    }
}
